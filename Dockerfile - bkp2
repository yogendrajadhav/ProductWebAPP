# =========================================
# Stage 1: Build the Angular Application
# =========================================
# =========================================
# Stage 1: Build the Angular Application
# =========================================
ARG NODE_VERSION=20
ARG NGINX_VERSION=alpine3.22

# Use a lightweight Node.js image for building (customizable via ARG)
FROM node:${NODE_VERSION} AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy package-related files first to leverage Docker's caching mechanism
COPY package.json package-lock.json ./

# Install project dependencies using npm ci (ensures a clean, reproducible install)
RUN --mount=type=cache,target=/root/.npm npm ci

# Copy the rest of the application source code into the container
COPY . .

# Build the Angular application
RUN npm run build --configuration=production --base-href=/ 

# =========================================
# Stage 2: Prepare Nginx to Serve Static Files
# =========================================
#FROM nginxinc/nginx-unprivileged:${NGINX_VERSION} AS runner
FROM public.ecr.aws/docker/library/nginx:${NGINX_VERSION} AS runner
# Copy custom Nginx config
COPY nginx.conf /etc/nginx/nginx.conf
COPY ./public/assets/config/config.template.json /usr/share/nginx/html/assets/config/config.template.json

# Copy the static build output
COPY --chown=nginx:nginx --from=builder /app/dist/*/browser /usr/share/nginx/html

# Copy entrypoint script and make it executable (while still root)
#COPY ./appEntryPoint.sh /
#RUN chmod +x /appEntryPoint.sh

# Switch to unprivileged user only after setup is done
#USER nginx

# Expose port
#EXPOSE 8080

#ENTRYPOINT ["sh", "/appEntryPoint.sh"]
#CMD ["nginx", "-g", "daemon off;"]

# Copy script to a safe location (before switching to nginx user)
#COPY ./appEntryPoint.sh /opt/appEntryPoint.sh
COPY --chmod=755 ./appEntryPoint.sh /opt/appEntryPoint.sh
RUN chmod +x /opt/appEntryPoint.sh

# Fix permission issue for client_temp dir
RUN mkdir -p /var/cache/nginx/client_temp && \
    chown -R nginx:nginx /var/cache/nginx
# Use unprivileged user after setup
USER nginx

# Expose port
EXPOSE 8080

# EntryPoint
ENTRYPOINT ["sh", "/opt/appEntryPoint.sh"]
CMD ["nginx", "-g", "daemon off;"]

